<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[geek-is-stupid]]></title>
  <link href="http://geek-is-stupid.github.io/atom.xml" rel="self"/>
  <link href="http://geek-is-stupid.github.io/"/>
  <updated>2017-03-04T10:34:49+07:00</updated>
  <id>http://geek-is-stupid.github.io/</id>
  <author>
    <name><![CDATA[levantAJ]]></name>
    <email><![CDATA[sirlevantai@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Make a UIColor From HEX?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2017/03/04/how-to-make-a-uicolor-from-hex/"/>
    <updated>2017-03-04T10:28:55+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2017/03/04/how-to-make-a-uicolor-from-hex</id>
    <content type="html"><![CDATA[<h5>We create a new construction method for UIColor:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIColor</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">convenience</span> <span class="k">init</span><span class="o">?</span><span class="p">(</span><span class="nl">hex</span><span class="p">:</span> <span class="n">String</span><span class="p">,</span> <span class="nl">alpha</span><span class="p">:</span> <span class="n">Float</span> <span class="o">=</span> <span class="mf">1.0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="n">hex</span> <span class="o">=</span> <span class="n">hex</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="n">hex</span><span class="p">.</span><span class="n">hasPrefix</span><span class="p">(</span><span class="s">&quot;#&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">hex</span> <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">from</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span> <span class="k">let</span> <span class="n">_</span> <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">range</span><span class="p">(</span><span class="nl">of</span><span class="p">:</span> <span class="s">&quot;(^[0-9A-Fa-f]{6}$)|(^[0-9A-Fa-f]{3}$)&quot;</span><span class="p">,</span> <span class="nl">options</span><span class="p">:</span> <span class="p">.</span><span class="n">regularExpression</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">3</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">let</span> <span class="n">redHex</span>   <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">to</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">1</span><span class="p">))</span>
</span><span class='line'>                <span class="k">let</span> <span class="n">greenHex</span> <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">with</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">1</span><span class="p">)..</span><span class="o">&lt;</span><span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>                <span class="k">let</span> <span class="n">blueHex</span>  <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">from</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">hex</span> <span class="o">=</span> <span class="n">redHex</span> <span class="o">+</span> <span class="n">redHex</span> <span class="o">+</span> <span class="n">greenHex</span> <span class="o">+</span> <span class="n">greenHex</span> <span class="o">+</span> <span class="n">blueHex</span> <span class="o">+</span> <span class="n">blueHex</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">let</span> <span class="n">redHex</span> <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">to</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">2</span><span class="p">))</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">greenHex</span> <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">with</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">2</span><span class="p">)..</span><span class="o">&lt;</span><span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">4</span><span class="p">))</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">blueHex</span> <span class="o">=</span> <span class="n">hex</span><span class="p">.</span><span class="n">substring</span><span class="p">(</span><span class="nl">with</span><span class="p">:</span> <span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">4</span><span class="p">)..</span><span class="o">&lt;</span><span class="n">hex</span><span class="p">.</span><span class="n">characters</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="n">hex</span><span class="p">.</span><span class="n">startIndex</span><span class="p">,</span> <span class="nl">offsetBy</span><span class="p">:</span> <span class="mi">6</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">var</span> <span class="nl">redInt</span><span class="p">:</span>   <span class="n">CUnsignedInt</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">var</span> <span class="nl">greenInt</span><span class="p">:</span> <span class="n">CUnsignedInt</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>            <span class="k">var</span> <span class="nl">blueInt</span><span class="p">:</span>  <span class="n">CUnsignedInt</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>            <span class="n">Scanner</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="n">redHex</span><span class="p">).</span><span class="n">scanHexInt32</span><span class="p">(</span><span class="o">&amp;</span><span class="n">redInt</span><span class="p">)</span>
</span><span class='line'>            <span class="n">Scanner</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="n">greenHex</span><span class="p">).</span><span class="n">scanHexInt32</span><span class="p">(</span><span class="o">&amp;</span><span class="n">greenInt</span><span class="p">)</span>
</span><span class='line'>            <span class="n">Scanner</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="n">blueHex</span><span class="p">).</span><span class="n">scanHexInt32</span><span class="p">(</span><span class="o">&amp;</span><span class="n">blueInt</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="k">init</span><span class="p">(</span><span class="nl">red</span><span class="p">:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">redInt</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">,</span> <span class="nl">green</span><span class="p">:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">greenInt</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">,</span> <span class="nl">blue</span><span class="p">:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">blueInt</span><span class="p">)</span> <span class="o">/</span> <span class="mf">255.0</span><span class="p">,</span> <span class="nl">alpha</span><span class="p">:</span> <span class="n">CGFloat</span><span class="p">(</span><span class="n">alpha</span><span class="p">))</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nb">self</span><span class="p">.</span><span class="k">init</span><span class="p">()</span>
</span><span class='line'>            <span class="k">return</span> <span class="nb">nil</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h6>OK:</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="nl">color</span><span class="p">:</span> <span class="bp">UIColor</span> <span class="o">=</span> <span class="bp">UIColor</span><span class="p">(</span><span class="nl">hex</span><span class="p">:</span> <span class="s">&quot;#4286f4&quot;</span><span class="p">)</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Question how to get hex string from an UIColor?</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIColor</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="nl">hex</span><span class="p">:</span> <span class="n">String</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">r</span><span class="p">:</span><span class="n">CGFloat</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">g</span><span class="p">:</span><span class="n">CGFloat</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">b</span><span class="p">:</span><span class="n">CGFloat</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">var</span> <span class="nl">a</span><span class="p">:</span><span class="n">CGFloat</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">getRed</span><span class="p">(</span><span class="o">&amp;</span><span class="n">r</span><span class="p">,</span> <span class="nl">green</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">g</span><span class="p">,</span> <span class="nl">blue</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">,</span> <span class="nl">alpha</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">let</span> <span class="nl">rgb</span><span class="p">:</span><span class="n">Int</span> <span class="o">=</span> <span class="p">(</span><span class="n">Int</span><span class="p">)(</span><span class="n">r</span><span class="o">*</span><span class="mi">255</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">16</span> <span class="o">|</span> <span class="p">(</span><span class="n">Int</span><span class="p">)(</span><span class="n">g</span><span class="o">*</span><span class="mi">255</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">8</span> <span class="o">|</span> <span class="p">(</span><span class="n">Int</span><span class="p">)(</span><span class="n">b</span><span class="o">*</span><span class="mi">255</span><span class="p">)</span><span class="o">&lt;&lt;</span><span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="bp">NSString</span><span class="p">(</span><span class="nl">format</span><span class="p">:</span><span class="s">&quot;%06x&quot;</span><span class="p">,</span> <span class="n">rgb</span><span class="p">)</span> <span class="kt">as</span> <span class="n">String</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h6>Show time:</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">debugPrint</span><span class="p">(</span><span class="n">yourColor</span><span class="p">.</span><span class="n">hex</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Align Vertical Image and Title in UIButton?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2017/03/04/how-to-align-vertical-image-and-title-in-uibutton/"/>
    <updated>2017-03-04T10:22:06+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2017/03/04/how-to-align-vertical-image-and-title-in-uibutton</id>
    <content type="html"><![CDATA[<h5>Following code below:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIButton</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">alignImageAndTitleVertically</span><span class="p">(</span><span class="nl">padding</span><span class="p">:</span> <span class="n">CGFloat</span> <span class="o">=</span> <span class="mf">4.0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">imageSize</span> <span class="o">=</span> <span class="n">imageView</span><span class="o">!</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">titleSize</span> <span class="o">=</span> <span class="n">titleLabel</span><span class="o">!</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">size</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">totalHeight</span> <span class="o">=</span> <span class="n">imageSize</span><span class="p">.</span><span class="n">height</span> <span class="o">+</span> <span class="n">titleSize</span><span class="p">.</span><span class="n">height</span> <span class="o">+</span> <span class="n">padding</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">imageEdgeInsets</span> <span class="o">=</span> <span class="bp">UIEdgeInsets</span><span class="p">(</span>
</span><span class='line'>            <span class="nl">top</span><span class="p">:</span> <span class="o">-</span><span class="p">(</span><span class="n">totalHeight</span> <span class="o">-</span> <span class="n">imageSize</span><span class="p">.</span><span class="n">height</span><span class="p">),</span>
</span><span class='line'>            <span class="nl">left</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="nl">bottom</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="nl">right</span><span class="p">:</span> <span class="o">-</span><span class="n">titleSize</span><span class="p">.</span><span class="n">width</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">titleEdgeInsets</span> <span class="o">=</span> <span class="bp">UIEdgeInsets</span><span class="p">(</span>
</span><span class='line'>            <span class="nl">top</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>            <span class="nl">left</span><span class="p">:</span> <span class="o">-</span><span class="n">imageSize</span><span class="p">.</span><span class="n">width</span><span class="p">,</span>
</span><span class='line'>            <span class="nl">bottom</span><span class="p">:</span> <span class="o">-</span><span class="p">(</span><span class="n">totalHeight</span> <span class="o">-</span> <span class="n">titleSize</span><span class="p">.</span><span class="n">height</span><span class="p">),</span>
</span><span class='line'>            <span class="nl">right</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h6>Show time:</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">button</span><span class="p">.</span><span class="n">alignImageAndTitleVertically</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Good luck!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Align Right an Image in UIButton?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2017/03/04/how-to-align-right-an-image-in-uibutton/"/>
    <updated>2017-03-04T10:17:56+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2017/03/04/how-to-align-right-an-image-in-uibutton</id>
    <content type="html"><![CDATA[<h5>Everything you need is:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIButton</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">func</span> <span class="n">imageToRight</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">transform</span> <span class="o">=</span> <span class="bp">CGAffineTransform</span><span class="p">(</span><span class="nl">scaleX</span><span class="p">:</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">,</span> <span class="nl">y</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">titleLabel</span><span class="o">?</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="bp">CGAffineTransform</span><span class="p">(</span><span class="nl">scaleX</span><span class="p">:</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">,</span> <span class="nl">y</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">imageView</span><span class="o">?</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="bp">CGAffineTransform</span><span class="p">(</span><span class="nl">scaleX</span><span class="p">:</span> <span class="o">-</span><span class="mf">1.0</span><span class="p">,</span> <span class="nl">y</span><span class="p">:</span> <span class="mf">1.0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h6>Show time:</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">button</span><span class="p">.</span><span class="n">imageToRight</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cheers 👌💪🤘</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Paging UICollectionView]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2017/02/20/how-to-paging-uicollectionview/"/>
    <updated>2017-02-20T17:41:48+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2017/02/20/how-to-paging-uicollectionview</id>
    <content type="html"><![CDATA[<p>The layout for our UICollectionView looks like:</p>

<p><img src="https://raw.githubusercontent.com/geek-is-stupid/geek-is-stupid.github.io/master/images/post/2017-02-20-how-to-paging-uicollectionview/layout.png" title="UICollectionView Layout" alt="a brick" /></p>

<p>Create new class as subclass for: <code>UICollectionViewFlowLayout</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">import</span> <span class="n">UIKit</span>
</span><span class='line'>
</span><span class='line'><span class="n">public</span> <span class="k">class</span> <span class="nl">PageCollectionViewFlowLayout</span><span class="p">:</span> <span class="bp">UICollectionViewFlowLayout</span> <span class="p">{</span>
</span><span class='line'>    <span class="kr">override</span> <span class="n">public</span> <span class="k">func</span> <span class="n">targetContentOffset</span><span class="p">(</span><span class="n">forProposedContentOffset</span> <span class="nl">proposedContentOffset</span><span class="p">:</span> <span class="bp">CGPoint</span><span class="p">,</span> <span class="n">withScrollingVelocity</span> <span class="nl">velocity</span><span class="p">:</span> <span class="bp">CGPoint</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="bp">CGPoint</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="k">let</span> <span class="nl">collectionView</span><span class="p">:</span> <span class="bp">UICollectionView</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">collectionView</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">let</span> <span class="nl">bounds</span><span class="p">:</span> <span class="bp">CGRect</span> <span class="o">=</span> <span class="n">collectionView</span><span class="p">.</span><span class="n">bounds</span>
</span><span class='line'>            <span class="k">let</span> <span class="n">halfWidth</span> <span class="o">=</span> <span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">*</span> <span class="mf">0.5</span>
</span><span class='line'>            <span class="k">let</span> <span class="nl">proposedContentOffsetCenterX</span><span class="p">:</span> <span class="n">CGFloat</span> <span class="o">=</span> <span class="n">proposedContentOffset</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">halfWidth</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span> <span class="k">let</span> <span class="n">attributesForVisibleCells</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">layoutAttributesForElements</span><span class="p">(</span><span class="k">in</span><span class="o">:</span> <span class="n">bounds</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">var</span> <span class="nl">candidateAttributes</span> <span class="p">:</span> <span class="bp">UICollectionViewLayoutAttributes</span><span class="o">?</span>
</span><span class='line'>                <span class="k">for</span> <span class="n">attributes</span> <span class="k">in</span> <span class="n">attributesForVisibleCells</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">if</span> <span class="n">attributes</span><span class="p">.</span><span class="n">representedElementCategory</span> <span class="o">!=</span> <span class="n">UICollectionElementCategory</span><span class="p">.</span><span class="n">cell</span> <span class="p">{</span> <span class="k">continue</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                    <span class="k">if</span> <span class="p">(</span><span class="n">attributes</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">attributes</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;</span> <span class="p">(</span><span class="n">collectionView</span><span class="p">.</span><span class="n">contentOffset</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">halfWidth</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">velocity</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">continue</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                    <span class="k">if</span> <span class="k">let</span> <span class="n">candAttrs</span> <span class="o">=</span> <span class="n">candidateAttributes</span> <span class="p">{</span>
</span><span class='line'>                        <span class="k">let</span> <span class="n">a</span> <span class="o">=</span> <span class="n">attributes</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">proposedContentOffsetCenterX</span>
</span><span class='line'>                        <span class="k">let</span> <span class="n">b</span> <span class="o">=</span> <span class="n">candAttrs</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">proposedContentOffsetCenterX</span>
</span><span class='line'>
</span><span class='line'>                        <span class="k">if</span> <span class="n">fabsf</span><span class="p">(</span><span class="n">Float</span><span class="p">(</span><span class="n">a</span><span class="p">))</span> <span class="o">&lt;</span> <span class="n">fabsf</span><span class="p">(</span><span class="n">Float</span><span class="p">(</span><span class="n">b</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                            <span class="n">candidateAttributes</span> <span class="o">=</span> <span class="n">attributes</span><span class="p">;</span>
</span><span class='line'>                        <span class="p">}</span>
</span><span class='line'>                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                        <span class="n">candidateAttributes</span> <span class="o">=</span> <span class="n">attributes</span>
</span><span class='line'>                        <span class="k">continue</span>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span><span class="p">(</span><span class="n">proposedContentOffset</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="o">-</span><span class="p">(</span><span class="n">collectionView</span><span class="p">.</span><span class="n">contentInset</span><span class="p">.</span><span class="kr">left</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                    <span class="k">return</span> <span class="n">proposedContentOffset</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">return</span> <span class="bp">CGPoint</span><span class="p">(</span><span class="nl">x</span><span class="p">:</span> <span class="n">floor</span><span class="p">(</span><span class="n">candidateAttributes</span><span class="o">!</span><span class="p">.</span><span class="n">center</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="n">halfWidth</span><span class="p">),</span> <span class="nl">y</span><span class="p">:</span> <span class="n">proposedContentOffset</span><span class="p">.</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nb">super</span><span class="p">.</span><span class="n">targetContentOffset</span><span class="p">(</span><span class="nl">forProposedContentOffset</span><span class="p">:</span> <span class="n">proposedContentOffset</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now go to Xcode to change the class for your <code>UICollectionView</code>:</p>

<p><img src="https://raw.githubusercontent.com/geek-is-stupid/geek-is-stupid.github.io/master/images/post/2017-02-20-how-to-paging-uicollectionview/FlowLayout.png" title="UICollectionView Layout" alt="a brick" /></p>

<p>And change the class for your Flow layout:</p>

<p><img src="https://raw.githubusercontent.com/geek-is-stupid/geek-is-stupid.github.io/master/images/post/2017-02-20-how-to-paging-uicollectionview/ChangeClassForFlowLayout.png" title="Change Class For Flow Layout" alt="a brick" /></p>

<p>Now show time!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Different .plist File for Different Environment in Xcode?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/17/different-plist-file-for-different-environment-in-xcode/"/>
    <updated>2016-08-17T15:53:42+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/17/different-plist-file-for-different-environment-in-xcode</id>
    <content type="html"><![CDATA[<p>If you have question like this title of this post, so you are my audience</p>

<p>OK now if I have 2 <code>.plist</code> files:</p>

<ol>
<li>SERVICE-ACCOUNT-DEBUG.plist</li>
<li>SERVICE-ACCOUNT-RELEASE.plist</li>
</ol>


<p>When app runs, depend on current environment we will rename one of them to <code>SERVICE-ACCOUNT.plist</code>:</p>

<p>If app in DEBUG mode we will rename <code>SERVICE-ACCOUNT-DEBUG.plist</code> to <code>SERVICE-ACCOUNT.plist</code></p>

<p>If app in RELEASE mode we will rename <code>SERVICE-ACCOUNT-RELEASE.plist</code> to <code>SERVICE-ACCOUNT.plist</code></p>

<p>Let go to your <code>Build Phares</code> and create new Run script:</p>

<p><img src="https://raw.githubusercontent.com/geek-is-stupid/geek-is-stupid.github.io/master/images/post/2016-08-17-different-plist-file-for-different-environment-in-xcode/1.png" title="New script" alt="a brick" /></p>

<p>Add this script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">if</span> <span class="p">[</span> <span class="s">&quot;${CONFIGURATION}&quot;</span> <span class="o">==</span> <span class="s">&quot;Release&quot;</span> <span class="p">];</span> <span class="n">then</span>
</span><span class='line'><span class="n">cp</span> <span class="o">-</span><span class="n">r</span> <span class="s">&quot;${PROJECT_DIR}/PATH-TO-FILE/SERVICE-ACCOUNT-RELEASE.plist&quot;</span> <span class="s">&quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/SERVICE-ACCOUNT.plist&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;Production plist copied&quot;</span>
</span><span class='line'><span class="n">elif</span> <span class="p">[</span> <span class="s">&quot;${CONFIGURATION}&quot;</span> <span class="o">==</span> <span class="s">&quot;Debug&quot;</span> <span class="p">];</span> <span class="n">then</span>
</span><span class='line'><span class="n">cp</span> <span class="o">-</span><span class="n">r</span> <span class="s">&quot;${PROJECT_DIR}/PATH-TO-FILE/SERVICE-ACCOUNT-DEBUG.plist&quot;</span> <span class="s">&quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/SERVICE-ACCOUNT.plist&quot;</span>
</span><span class='line'><span class="n">echo</span> <span class="s">&quot;Debug plist copied&quot;</span>
</span><span class='line'><span class="n">fi</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Show Warning When Add //TODO: //FIXME: //ERRO: In Xcode?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/17/how-to-show-warning-when-add-slash-slash-todo-and-slash-slash-fixme-in-xcode/"/>
    <updated>2016-08-17T15:36:02+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/17/how-to-show-warning-when-add-slash-slash-todo-and-slash-slash-fixme-in-xcode</id>
    <content type="html"><![CDATA[<p>If you make a note in xcode, and you dont want to miss that, there are some solution for that, I will show you one:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">//TODO: Let read this blog in 15 mins</span>
</span><span class='line'><span class="c1">//FIX: I need you fix me man :)</span>
</span><span class='line'><span class="c1">//ERROR: Noooooooooo, get out of here the error</span>
</span></code></pre></td></tr></table></div></figure>


<p>OK now how to make xcode understand to show your wanrning and error:</p>

<p>Go to <code>Build Phases</code> and create new Run script:</p>

<p><img src="https://raw.githubusercontent.com/geek-is-stupid/geek-is-stupid.github.io/master/images/post/2016-08-17-how-to-show-warning-when-add-slash-slash-todo-and-slash-slash-fixme-in-xcode/1.png" title="New script" alt="a brick" /></p>

<p>Add this script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">TAGS</span><span class="o">=</span><span class="s">&quot;TODO:|FIXME:&quot;</span>
</span><span class='line'><span class="n">ERRORTAG</span><span class="o">=</span><span class="s">&quot;ERROR:&quot;</span>
</span><span class='line'><span class="n">find</span> <span class="s">&quot;${SRCROOT}&quot;</span> <span class="err">\</span><span class="p">(</span> <span class="o">-</span><span class="n">name</span> <span class="s">&quot;*.h&quot;</span> <span class="o">-</span><span class="n">or</span> <span class="o">-</span><span class="n">name</span> <span class="s">&quot;*.m&quot;</span> <span class="o">-</span><span class="n">or</span> <span class="o">-</span><span class="n">name</span> <span class="s">&quot;*.swift&quot;</span> <span class="err">\</span><span class="p">)</span> <span class="o">-</span><span class="n">print0</span> <span class="o">|</span> <span class="n">xargs</span> <span class="o">-</span><span class="mi">0</span> <span class="n">egrep</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">filename</span> <span class="o">--</span><span class="n">line</span><span class="o">-</span><span class="n">number</span> <span class="o">--</span><span class="n">only</span><span class="o">-</span><span class="n">matching</span> <span class="s">&quot;($TAGS).*\$|($ERRORTAG).*\$&quot;</span> <span class="o">|</span> <span class="n">perl</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s">&quot;s/($TAGS)/ warning: \$1/&quot;</span> <span class="o">|</span> <span class="n">perl</span> <span class="o">-</span><span class="n">p</span> <span class="o">-</span><span class="n">e</span> <span class="s">&quot;s/($ERRORTAG)/ error: \$1/&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Swift Compiler Flags in CocoaPods]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/17/setting-swift-compiler-flags-in-cocoapods/"/>
    <updated>2016-08-17T15:15:53+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/17/setting-swift-compiler-flags-in-cocoapods</id>
    <content type="html"><![CDATA[<p>Someday your boss ask you to have staging server and production server to make data be pure, so you will find out this code for your api:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">public</span> <span class="k">var</span> <span class="nl">host</span><span class="p">:</span> <span class="bp">NSURL</span> <span class="p">{</span>
</span><span class='line'>    <span class="cp">#if DEBUG</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">NSURL</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="s">&quot;https://www.google.com.vn&quot;</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>    <span class="cp">#else</span>
</span><span class='line'>        <span class="k">return</span> <span class="bp">NSURL</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="s">&quot;http://geek-is-stupid.github.io&quot;</span><span class="p">)</span><span class="o">!</span>
</span><span class='line'>    <span class="cp">#endif</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And you go to <code>Build Settings</code> and set the <code>DEBUG</code> symbol in <code>Swift Compiler - Custom Flags</code> section for the <code>Other Swift Flags</code> key via a <code>-D DEBUG</code> entry. See the following screenshot for an example:</p>

<p><img src="https://raw.githubusercontent.com/geek-is-stupid/geek-is-stupid.github.io/master/images/post/2016-08-17-setting-swift-compiler-flags-in-cocoapods/1.png" title="Setup -D DEBUG for Other Swift Flags" alt="a brick" /></p>

<p>That works, hummm but what happen if I move the <code>host</code> to a library and I use CocoaPods to manages dependencies, it won&rsquo;t work any more.</p>

<p>So the way to let it jump :)</p>

<p>Open your Podfile and add this script to the bottom:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">post_install</span> <span class="k">do</span> <span class="o">|</span><span class="n">installer</span><span class="o">|</span>
</span><span class='line'>    <span class="n">installer</span><span class="p">.</span><span class="n">pods_project</span><span class="p">.</span><span class="n">build_configurations</span><span class="p">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">config</span><span class="p">.</span><span class="n">name</span> <span class="o">==</span> <span class="err">&#39;</span><span class="n">Debug</span><span class="err">&#39;</span>
</span><span class='line'>            <span class="n">config</span><span class="p">.</span><span class="n">build_settings</span><span class="p">[</span><span class="err">&#39;</span><span class="n">OTHER_SWIFT_FLAGS</span><span class="err">&#39;</span><span class="p">]</span> <span class="o">||=</span> <span class="p">[</span><span class="err">&#39;$</span><span class="p">(</span><span class="n">inherited</span><span class="p">)</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="o">-</span><span class="n">D</span> <span class="n">DEBUG</span><span class="err">&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">elsif</span> <span class="n">config</span><span class="p">.</span><span class="n">name</span> <span class="o">==</span> <span class="err">&#39;</span><span class="n">Release</span><span class="err">&#39;</span>
</span><span class='line'>            <span class="n">config</span><span class="p">.</span><span class="n">build_settings</span><span class="p">[</span><span class="err">&#39;</span><span class="n">OTHER_SWIFT_FLAGS</span><span class="err">&#39;</span><span class="p">]</span> <span class="o">||=</span> <span class="p">[</span><span class="err">&#39;$</span><span class="p">(</span><span class="n">inherited</span><span class="p">)</span><span class="err">&#39;</span><span class="p">,</span> <span class="err">&#39;</span><span class="o">-</span><span class="n">D</span> <span class="n">RELEASE</span><span class="err">&#39;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">end</span>
</span><span class='line'>    <span class="n">end</span>
</span><span class='line'><span class="n">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Set Placeholder Text Color for UITextField?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/how-to-set-placeholder-text-color-for-uitextfield/"/>
    <updated>2016-08-16T15:39:21+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/how-to-set-placeholder-text-color-for-uitextfield</id>
    <content type="html"><![CDATA[<h4>Worked on UI is interesting part of iOS development</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UITextField</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">func</span> <span class="n">setPlaceholderColor</span><span class="p">(</span><span class="nl">color</span><span class="p">:</span> <span class="bp">UIColor</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="k">let</span> <span class="n">placeholder</span> <span class="o">=</span> <span class="n">placeholder</span> <span class="p">{</span>
</span><span class='line'>            <span class="n">attributedPlaceholder</span> <span class="o">=</span> <span class="bp">NSAttributedString</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="n">placeholder</span><span class="p">,</span> <span class="nl">attributes</span><span class="p">:</span> <span class="p">[</span><span class="nl">NSForegroundColorAttributeName</span><span class="p">:</span> <span class="n">color</span><span class="p">])</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Way to use:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">textField</span> <span class="o">=</span> <span class="bp">UITextField</span><span class="p">()</span>
</span><span class='line'><span class="n">textField</span><span class="p">.</span><span class="n">setPlaceholderColor</span><span class="p">(.</span><span class="n">redColor</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Let&rsquo;s try, it&rsquo;s delicious</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Go to iOS Settings From Your App?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/how-to-go-to-ios-settings-from-your-app/"/>
    <updated>2016-08-16T15:26:31+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/how-to-go-to-ios-settings-from-your-app</id>
    <content type="html"><![CDATA[<h3>OK let&rsquo;s do</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIApplication</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">class</span> <span class="k">func</span> <span class="n">openSettings</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">url</span> <span class="o">=</span> <span class="bp">NSURL</span><span class="p">(</span><span class="nl">string</span><span class="p">:</span> <span class="n">UIApplicationOpenSettingsURLString</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">().</span><span class="n">openURL</span><span class="p">(</span><span class="n">url</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Show time:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="bp">UIApplication</span><span class="p">.</span><span class="n">openSettings</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Hope you like it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Set Background Color for Status Bar?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/how-to-set-background-color-for-status-bar/"/>
    <updated>2016-08-16T15:16:54+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/how-to-set-background-color-for-status-bar</id>
    <content type="html"><![CDATA[<h4>There are many way to do, I show a trick, don&rsquo;t follow me :D</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIApplication</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">class</span> <span class="k">func</span> <span class="n">setStatusBarBackgroundColor</span><span class="p">(</span><span class="nl">color</span><span class="p">:</span> <span class="bp">UIColor</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">guard</span> <span class="k">let</span> <span class="n">statusBar</span> <span class="o">=</span> <span class="bp">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">().</span><span class="n">valueForKey</span><span class="p">(</span><span class="s">&quot;statusBarWindow&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">.</span><span class="n">valueForKey</span><span class="p">(</span><span class="s">&quot;statusBar&quot;</span><span class="p">)</span> <span class="kt">as</span><span class="o">?</span> <span class="bp">UIView</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="p">}</span>
</span><span class='line'>        <span class="n">statusBar</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="n">color</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Do and see the change:</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="bp">UIApplication</span><span class="p">.</span><span class="n">setStatusBarBackgroundColor</span><span class="p">(.</span><span class="n">grayColor</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Show Version in iOS App?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/how-to-show-version-in-ios-app/"/>
    <updated>2016-08-16T15:11:29+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/how-to-show-version-in-ios-app</id>
    <content type="html"><![CDATA[<h3>Let make your code be complicated…</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">struct</span> <span class="n">Version</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">let</span> <span class="kt">short</span><span class="o">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="k">let</span> <span class="nl">full</span><span class="p">:</span> <span class="n">String</span>
</span><span class='line'>    <span class="k">let</span> <span class="nl">display</span><span class="p">:</span> <span class="n">String</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And make an extension for UIApplication</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">extension</span> <span class="bp">UIApplication</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">static</span> <span class="k">var</span> <span class="nl">version</span><span class="p">:</span> <span class="n">Version</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">let</span> <span class="kt">short</span> <span class="o">=</span> <span class="bp">NSBundle</span><span class="p">.</span><span class="n">mainBundle</span><span class="p">().</span><span class="n">objectForInfoDictionaryKey</span><span class="p">(</span><span class="s">&quot;CFBundleShortVersionString&quot;</span><span class="p">)</span> <span class="kt">as</span><span class="o">!</span> <span class="n">String</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">full</span> <span class="o">=</span> <span class="bp">NSBundle</span><span class="p">.</span><span class="n">mainBundle</span><span class="p">().</span><span class="n">objectForInfoDictionaryKey</span><span class="p">(</span><span class="n">kCFBundleVersionKey</span> <span class="kt">as</span> <span class="n">String</span><span class="p">)</span> <span class="kt">as</span><span class="o">!</span> <span class="n">String</span>
</span><span class='line'>        <span class="k">let</span> <span class="n">display</span> <span class="o">=</span> <span class="n">full</span><span class="p">.</span><span class="n">containsString</span><span class="p">(</span><span class="s">&quot;.&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="nl">full</span> <span class="p">:</span> <span class="s">&quot;\(short).\(full)&quot;</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">Version</span><span class="p">(</span><span class="kt">short</span><span class="o">:</span> <span class="kt">short</span><span class="p">,</span> <span class="nl">full</span><span class="p">:</span> <span class="n">full</span><span class="p">,</span> <span class="nl">display</span><span class="p">:</span> <span class="n">display</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Your time:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">debugPrint</span><span class="p">(</span><span class="bp">UIApplication</span><span class="p">.</span><span class="n">version</span><span class="p">.</span><span class="kt">short</span><span class="p">)</span>
</span><span class='line'><span class="n">debugPrint</span><span class="p">(</span><span class="bp">UIApplication</span><span class="p">.</span><span class="n">version</span><span class="p">.</span><span class="n">full</span><span class="p">)</span>
</span><span class='line'><span class="n">debugPrint</span><span class="p">(</span><span class="bp">UIApplication</span><span class="p">.</span><span class="n">version</span><span class="p">.</span><span class="n">display</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Handle Response With Success: And Error: In One Closure?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/how-to-handle-response-with-success-and-error-in-one-closure/"/>
    <updated>2016-08-16T14:49:39+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/how-to-handle-response-with-success-and-error-in-one-closure</id>
    <content type="html"><![CDATA[<h5>Nowaday, there are a lot of solution to handle response which has multiple states.</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">func</span> <span class="nf">getUserDetail</span><span class="p">(</span><span class="nl">completion</span><span class="p">:</span> <span class="p">(</span><span class="n">User</span><span class="o">?</span><span class="p">,</span> <span class="bp">NSError</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{...}</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">func</span> <span class="nf">getUserDetail</span><span class="p">(</span><span class="nl">success</span><span class="p">:</span> <span class="n">User</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">,</span> <span class="nl">failure</span><span class="p">:</span> <span class="bp">NSError</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{...}</span>
</span></code></pre></td></tr></table></div></figure>


<h6>I hate this, when ever I call that method I have to check <code>error != nil</code></h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">getUserDetail</span><span class="p">({</span> <span class="n">user</span><span class="p">,</span> <span class="n">error</span> <span class="k">in</span>
</span><span class='line'>  <span class="k">if</span> <span class="k">let</span> <span class="n">error</span> <span class="o">=</span> <span class="n">error</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//Do when failed</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="k">let</span> <span class="n">user</span> <span class="o">=</span> <span class="n">user</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//Do when success</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">//What should I do here</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<h6>or kind of prolix :) but simple right</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">getUserDetail</span><span class="p">({</span> <span class="n">user</span> <span class="k">in</span>
</span><span class='line'>  <span class="c1">//Do when success</span>
</span><span class='line'><span class="p">},</span> <span class="nl">failure</span><span class="p">:</span> <span class="p">{</span> <span class="n">error</span> <span class="k">in</span>
</span><span class='line'>  <span class="c1">//Do when failed</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p><br/>
<br/></p>

<h2>OK now I will do some think more complicated, but I think good for me (not recomended for everybody)</h2>

<p>First, create an enum <code>Response</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">enum</span> <span class="n">Response</span><span class="o">&lt;</span><span class="n">Value</span><span class="o">&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">Success</span><span class="p">(</span><span class="n">Value</span><span class="p">)</span>
</span><span class='line'>    <span class="k">case</span> <span class="n">Failure</span><span class="p">(</span><span class="bp">NSError</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Time to use your enum:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">func</span> <span class="nf">getUserDetail</span><span class="p">(</span><span class="nl">completion</span><span class="p">:</span> <span class="n">Response</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;</span> <span class="o">-&gt;</span> <span class="n">Void</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// if success</span>
</span><span class='line'>  <span class="n">completion</span><span class="p">(</span><span class="n">Response</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;</span><span class="p">.</span><span class="n">Success</span><span class="p">(</span><span class="n">user</span><span class="p">))</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// if failed</span>
</span><span class='line'>  <span class="n">completion</span><span class="p">(</span><span class="n">Response</span><span class="o">&lt;</span><span class="n">User</span><span class="o">&gt;</span><span class="p">.</span><span class="n">Failure</span><span class="p">(</span><span class="n">error</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Call your method:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">getUserDetail</span><span class="p">({</span> <span class="n">response</span> <span class="k">in</span>
</span><span class='line'>  <span class="k">switch</span> <span class="n">response</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="p">.</span><span class="n">Success</span><span class="p">(</span><span class="k">let</span> <span class="n">user</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>      <span class="c1">//Do when success</span>
</span><span class='line'>  <span class="k">case</span> <span class="p">.</span><span class="n">Failure</span><span class="p">(</span><span class="k">let</span> <span class="n">error</span><span class="p">)</span><span class="o">:</span>
</span><span class='line'>      <span class="c1">//Do when failed</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>Thank for your attention!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Make Animation for UIImageView From List of Images]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/how-to-make-animation-for-uiimageview-from-list-of-images/"/>
    <updated>2016-08-16T14:38:00+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/how-to-make-animation-for-uiimageview-from-list-of-images</id>
    <content type="html"><![CDATA[<p>If you have some images like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">firstImage</span> <span class="o">=</span> <span class="bp">UIImage</span><span class="p">(</span><span class="nl">named</span><span class="p">:</span> <span class="s">&quot;first&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">secondImage</span> <span class="o">=</span> <span class="bp">UIImage</span><span class="p">(</span><span class="nl">named</span><span class="p">:</span> <span class="s">&quot;first&quot;</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">thirdImage</span> <span class="o">=</span> <span class="bp">UIImage</span><span class="p">(</span><span class="nl">named</span><span class="p">:</span> <span class="s">&quot;first&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>How to display these images on UIImageView and it change image automatically?</h2>

<h3>Easy, try this:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">imageView</span> <span class="o">=</span> <span class="bp">UIImageView</span><span class="p">()</span>
</span><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">animationImages</span> <span class="o">=</span> <span class="p">[</span><span class="n">firstImage</span><span class="p">,</span> <span class="n">secondImage</span><span class="p">,</span> <span class="n">thirdImage</span><span class="p">]</span>
</span><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">startAnimating</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h3>So how to set number of loops?</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">animationRepeatCount</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1">// 0 means infinite (default is 0)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Hummm, ok so how to change velocity?</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">animationDuration</span> <span class="o">=</span> <span class="mf">0.5</span> <span class="c1">// 0.5 seconds  for one cycle of images</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Now stop it!</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">imageView</span><span class="p">.</span><span class="n">stopAnimating</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>Fun right!!!, cheers</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adjust Custom Font Verical Alignment - Xcode]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2016/08/16/adjust-custom-font-verical-alignment-xcode/"/>
    <updated>2016-08-16T10:05:47+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2016/08/16/adjust-custom-font-verical-alignment-xcode</id>
    <content type="html"><![CDATA[<p>Some time when you custom font in your project, and the font display not correctly, so how to fix that:</p>

<p>Step 1. Download <a href="https://developer.apple.com/fonts/">Apple Font Tool Suite</a> command line utilities.</p>

<p>Step 2. Go to the folder which contains your font and run command:
<code>ftxdumperfuser -t hhea -A d Bold.ttf</code></p>

<p>Step 3. It will generate Bold.hhea.xml automatically, open it and edit <code>ascender</code> value. In my case I changed it from <code>750</code> to <code>1200</code></p>

<p>Step 4. Run: <code>ftxdumperfuser -t hhea -A f Bold.ttf</code></p>

<p>And now your font is updated!!!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What Difference Between Content Hugging and Content Compression Resistance Priority - Cocoa Autolayout?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2015/12/21/what-difference-between-content-hugging-and-content-compression-resistance-priority/"/>
    <updated>2015-12-21T11:04:00+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2015/12/21/what-difference-between-content-hugging-and-content-compression-resistance-priority</id>
    <content type="html"><![CDATA[<h3>Summary:</h3>

<ul>
<li>Hugging: Content does not want to grow</li>
<li>Compression Resistance: Content does not want to shrink</li>
</ul>


<h3>Example:</h3>

<p>I have a button look like this:&nbsp;&nbsp;&nbsp;[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Click Me&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]</p>

<table>
<thead>
<tr>
<th> # </th>
<th style="text-align:center;"> &lt;500 </th>
<th style="text-align:center;"> >500 </th>
</tr>
</thead>
<tbody>
<tr>
<td> Hugging </td>
<td style="text-align:center;"> [&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Click Me&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;] </td>
<td style="text-align:center;"> [Click Me] </td>
</tr>
<tr>
<td> Compression Resistance </td>
<td style="text-align:center;"> [Cli…] </td>
<td style="text-align:center;"> [Click Me] </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick Way to Add New Auto Layout Constraints in Swift]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2015/12/10/quick-way-to-add-new-auto-layout-constraints-in-swift/"/>
    <updated>2015-12-10T15:22:53+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2015/12/10/quick-way-to-add-new-auto-layout-constraints-in-swift</id>
    <content type="html"><![CDATA[<h3>What you will do when you wanna add new space between a label and a button? Or add width for a label?</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">spaceConstraint</span> <span class="o">=</span> <span class="bp">NSLayoutConstraint</span><span class="p">(</span>
</span><span class='line'>    <span class="nl">item</span><span class="p">:</span> <span class="n">label</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">attribute</span><span class="p">:</span> <span class="p">.</span><span class="n">Leading</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">relatedBy</span><span class="p">:</span> <span class="p">.</span><span class="n">Equal</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">toItem</span><span class="p">:</span> <span class="n">button</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">attribute</span><span class="p">:</span> <span class="p">.</span><span class="n">Trailing</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">multiplier</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nl">constant</span><span class="p">:</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">let</span> <span class="n">widthConstraint</span> <span class="o">=</span> <span class="bp">NSLayoutConstraint</span><span class="p">(</span>
</span><span class='line'>    <span class="nl">item</span><span class="p">:</span> <span class="n">label</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">attribute</span><span class="p">:</span> <span class="p">.</span><span class="n">Width</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">relatedBy</span><span class="p">:</span> <span class="p">.</span><span class="n">LessThanOrEqual</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">toItem</span><span class="p">:</span> <span class="nb">nil</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">attribute</span><span class="p">:</span> <span class="p">.</span><span class="n">NotAnAttribute</span><span class="p">,</span>
</span><span class='line'>    <span class="nl">multiplier</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nl">constant</span><span class="p">:</span> <span class="mi">200</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">spaceConstraint</span><span class="p">.</span><span class="n">active</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="n">widthConstraint</span><span class="p">.</span><span class="n">active</span> <span class="o">=</span> <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h3>OK, Now I will show you a simple way:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">spaceConstraint</span> <span class="o">=</span> <span class="n">label</span><span class="p">.</span><span class="n">leadingAnchor</span><span class="p">.</span><span class="n">constraintEqualToAnchor</span><span class="p">(</span><span class="n">button</span><span class="p">.</span><span class="n">trailingAnchor</span><span class="p">,</span> <span class="nl">constant</span><span class="p">:</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">widthConstraint</span> <span class="o">=</span> <span class="n">label</span><span class="p">.</span><span class="n">widthAnchor</span><span class="p">.</span><span class="n">constraintLessThanOrEqualToConstant</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>
</span><span class='line'><span class="n">spaceConstraint</span><span class="p">.</span><span class="n">active</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="n">widthConstraint</span><span class="p">.</span><span class="n">active</span> <span class="o">=</span> <span class="nb">true</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Cheers!!!</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Debug UIWebView in iOS?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2015/11/09/how-to-debug-uiwebview-in-ios/"/>
    <updated>2015-11-09T18:10:56+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2015/11/09/how-to-debug-uiwebview-in-ios</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re using iOS >= 6 and you have mountain lion (10.8) or Safari >= 6, you can just:</p>

<ol>
<li>Open the application in the simulator (or your device in XCode >= 4.5.x).</li>
<li>Open Safari on your Mac: Go to <code>Preferences</code> -> <code>Advanced</code> and make sure &ldquo;<code>Show Develop Menu in Menubar</code>&rdquo; is on.</li>
<li>From the Menu bar (of Safari) select <code>Develop -&gt; iPhone Simulator -&gt; [your webview page]</code>.</li>
</ol>


<p>That&rsquo;s it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Close Modal Screens in UIStoryboard - iOS9? - Unwind Segue]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2015/11/02/how-to-close-modal-screens-in-uistoryboard-ios9-unwind-segue/"/>
    <updated>2015-11-02T11:14:41+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2015/11/02/how-to-close-modal-screens-in-uistoryboard-ios9-unwind-segue</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Map(), flatMap() Its So Magic]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2015/11/02/map-flatmap-its-so-magic/"/>
    <updated>2015-11-02T10:29:45+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2015/11/02/map-flatmap-its-so-magic</id>
    <content type="html"><![CDATA[<h1>Array</h1>

<p>I have a class:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="n">Person</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">var</span> <span class="nl">name</span><span class="p">:</span> <span class="n">String</span><span class="o">?</span>
</span><span class='line'>    <span class="k">var</span> <span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">init</span><span class="p">(</span><span class="nl">name</span><span class="p">:</span> <span class="n">String</span><span class="o">?</span><span class="p">,</span> <span class="nl">age</span><span class="p">:</span> <span class="n">Int</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">age</span> <span class="o">=</span> <span class="n">age</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and I have a lot of people and all of them I stored in an array as well:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">A</span> <span class="o">=</span> <span class="n">Person</span><span class="p">(</span><span class="nl">name</span><span class="p">:</span> <span class="s">&quot;A&quot;</span><span class="p">,</span> <span class="nl">age</span><span class="p">:</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">B</span> <span class="o">=</span> <span class="n">Person</span><span class="p">(</span><span class="nl">name</span><span class="p">:</span> <span class="s">&quot;B&quot;</span><span class="p">,</span> <span class="nl">age</span><span class="p">:</span> <span class="mi">25</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">C</span> <span class="o">=</span> <span class="n">Person</span><span class="p">(</span><span class="nl">name</span><span class="p">:</span> <span class="s">&quot;C&quot;</span><span class="p">,</span> <span class="nl">age</span><span class="p">:</span> <span class="mi">27</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">D</span> <span class="o">=</span> <span class="n">Person</span><span class="p">(</span><span class="nl">name</span><span class="p">:</span> <span class="s">&quot;D&quot;</span><span class="p">,</span> <span class="nl">age</span><span class="p">:</span> <span class="mi">32</span><span class="p">)</span>
</span><span class='line'><span class="k">let</span> <span class="n">people</span> <span class="o">=</span> <span class="p">[</span><span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">,</span> <span class="n">D</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Question: How to join all names of people in the array?</h3>

<p>Simple way:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">var</span> <span class="n">names</span> <span class="o">=</span> <span class="s">&quot;&quot;</span>
</span><span class='line'><span class="k">for</span> <span class="n">person</span> <span class="k">in</span> <span class="n">people</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">names</span> <span class="o">+=</span> <span class="n">person</span><span class="p">.</span><span class="n">name</span><span class="o">!</span> <span class="o">+</span> <span class="s">&quot;,&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="n">names</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Shorter way:</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">arrayNames</span> <span class="o">=</span> <span class="n">people</span><span class="p">.</span><span class="n">map</span> <span class="p">{</span> <span class="err">$</span><span class="mf">0.</span><span class="n">name</span> <span class="p">}</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="n">arrayNames</span><span class="p">.</span><span class="n">joinWithSeparator</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">arrayNames</span> <span class="o">=</span> <span class="n">people</span><span class="p">.</span><span class="n">map</span> <span class="p">{</span> <span class="n">person</span> <span class="k">in</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">person</span><span class="p">.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">print</span><span class="p">(</span><span class="n">arrayNames</span><span class="p">.</span><span class="n">joinWithSeparator</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<h3>So how about if I using <code>.flatMap</code>???</h3>

<p>Now I need to change a little bit here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">A</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="nb">nil</span>
</span><span class='line'><span class="n">C</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="nb">nil</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Using <code>.map</code>:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">arrayNames</span> <span class="o">=</span> <span class="n">people</span><span class="p">.</span><span class="n">map</span> <span class="p">{</span> <span class="n">person</span> <span class="k">in</span>
</span><span class='line'>    <span class="n">guard</span> <span class="k">let</span> <span class="n">name</span> <span class="o">=</span> <span class="n">person</span><span class="p">.</span><span class="n">name</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="nb">nil</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">person</span><span class="p">.</span><span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="p">[</span><span class="nb">nil</span><span class="p">,</span> <span class="s">&quot;B&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">,</span> <span class="s">&quot;D&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h5>Using <code>.flatMap</code>:</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">arrayNames</span> <span class="o">=</span> <span class="n">people</span><span class="p">.</span><span class="n">flatMap</span> <span class="p">{</span> <span class="n">person</span> <span class="k">in</span>
</span><span class='line'>    <span class="n">guard</span> <span class="k">let</span> <span class="n">name</span> <span class="o">=</span> <span class="n">person</span><span class="p">.</span><span class="n">name</span> <span class="k">else</span> <span class="p">{</span> <span class="k">return</span> <span class="nb">nil</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">name</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="p">[</span><span class="s">&quot;B&quot;</span><span class="p">,</span> <span class="s">&quot;D&quot;</span><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>-> The <code>nil</code> values won&rsquo;t be added into returned array</h4>

<h4><u>Difference</u>:</h4>

<table>
<thead>
<tr>
<th> <code>.map</code> </th>
<th> <code>.flatMap</code> </th>
</tr>
</thead>
<tbody>
<tr>
<td> Add <code>nil</code> values into returned array </td>
<td> Doesn&rsquo;t add <code>nil</code> values into returned array </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Hide Status Bar by Press a Button in iOS 9?]]></title>
    <link href="http://geek-is-stupid.github.io/blog/2015/10/27/how-to-hide-status-bar-in-ios-9/"/>
    <updated>2015-10-27T16:12:23+07:00</updated>
    <id>http://geek-is-stupid.github.io/blog/2015/10/27/how-to-hide-status-bar-in-ios-9</id>
    <content type="html"><![CDATA[<h2>With animations:</h2>

<ul>
<li>Solution 1:</li>
</ul>


<p><a href="https://stackoverzone.files.wordpress.com/2015/10/hide-status-bar.gif"><img align='center' src="https://stackoverzone.files.wordpress.com/2015/10/hide-status-bar.gif" /></a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">class</span> <span class="nl">ViewController</span><span class="p">:</span> <span class="bp">UIViewController</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">var</span> <span class="n">hideStatusBar</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'>  
</span><span class='line'>  <span class="p">@</span><span class="kt">IBAction</span> <span class="k">func</span> <span class="n">buttonTapped</span><span class="p">(</span><span class="nl">button</span><span class="p">:</span> <span class="bp">UIButton</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="n">hideStatusBar</span> <span class="o">=</span> <span class="o">!</span><span class="n">hideStatusBar</span>
</span><span class='line'>          <span class="bp">UIView</span><span class="p">.</span><span class="n">animateWithDuration</span><span class="p">(</span><span class="mf">0.25</span><span class="p">)</span> <span class="p">{</span> <span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Void</span> <span class="k">in</span>
</span><span class='line'>              <span class="nb">self</span><span class="p">.</span><span class="n">setNeedsStatusBarAppearanceUpdate</span><span class="p">()</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kr">override</span> <span class="k">func</span> <span class="n">preferredStatusBarUpdateAnimation</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">UIStatusBarAnimation</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">.</span><span class="n">Fade</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kr">override</span> <span class="k">func</span> <span class="n">prefersStatusBarHidden</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="n">hideStatusBar</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ref: <a href="http://stackoverflow.com/questions/32808593/setstatusbarhidden-withanimation-deprecated-in-ios-9#answer-32808743"><a href="http://stackoverflow.com/questions/32808593/setstatusbarhidden-withanimation-deprecated-in-ios-9#answer-32808743">http://stackoverflow.com/questions/32808593/setstatusbarhidden-withanimation-deprecated-in-ios-9#answer-32808743</a></a></p>

<ul>
<li>Solution 2:</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="p">@</span><span class="kt">IBAction</span> <span class="n">fun</span> <span class="n">buttonTapped</span><span class="p">(</span><span class="nl">button</span><span class="p">:</span> <span class="bp">UIButton</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="bp">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">().</span><span class="n">setStatusBarHidden</span><span class="p">(</span><span class="nb">false</span><span class="p">,</span> <span class="nl">withAnimation</span><span class="p">:</span> <span class="p">.</span><span class="n">Fade</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>But this was deprecated on iOS 9 and later</p>

<h2>What should I do if: <code>"View controller-based status bar appearance" = NO</code></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="bp">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">().</span><span class="n">statusBarHidden</span> <span class="o">=</span> <span class="nb">false</span>
</span></code></pre></td></tr></table></div></figure>


<p>This solution without animation :(</p>
]]></content>
  </entry>
  
</feed>
